Python files found: 
['C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\app.py', 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\__init__.py', 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\core\\create_analyses.py', 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\core\\fileinteraction.py', 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\core\\metrics.py', 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\core\\__init__.py', 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\data\\__init__.py', 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\gui\\analyseframe.py', 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\gui\\containerframe.py', 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\gui\\fileframes.py', 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\gui\\helperframes.py', 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\gui\\mainframe.py', 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\gui\\rateframe.py', 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\gui\\__init__.py']
Documenting methods and functions ...
Error decoding base64 string:  'numpy.float64' object has no attribute 'encode'
Error decoding base64 string:  'numpy.float64' object has no attribute 'encode'

Responses for files:
['C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\app.py', 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\__init__.py', 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\core\\create_analyses.py']

{'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\app.py': [{'App': {'__init__': '"""Initialize the main application window for IIRA.\n\nThis method sets up the main window with a title, geometry, and minimum size. It configures the grid layout, initializes the database interaction, loads icons, and sets the theme for the application. It also initializes all frames used in the application and displays the main frame.\n"""', 'show_frame': '"""Raises the specified frame to the top of the application window.\n\nArgs:\n    frame_name (str): The name of the frame to be raised.\n"""', 'load_icons': '"""\nLoads and initializes icons for the application from the specified file paths.\n\nThis method sets up various icons used throughout the application\'s GUI by loading them from image files located in the \'data/icons\' directory. Each icon is loaded as an ImageTk.PhotoImage object and assigned to an attribute of the App class for easy access throughout the application.\n"""', 'init_root_frame': '"""Initialize the root frame by setting its grid configuration.\n\nThis method sets the provided frame to occupy the entire grid cell at the top-left\ncorner of the grid layout, allowing it to expand and fill the space.\n\nArgs:\n    frame (tk.Frame): The frame to be configured and added to the grid.\n"""', 'init_frames': '"""\nInitializes and configures all the frames used in the application.\n\nThis method sets up each frame by first clearing any existing widgets in the frame,\nthen creating a new instance of the frame, initializing it with root frame settings,\nand finally mapping the frame to a dictionary for easy access and management.\n"""'}}, {'global': {}}], 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\__init__.py': ['This file is empty.'], 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\core\\create_analyses.py': [{'CreateAnalyses': {'__init__': '"""\nInitialize the CreateAnalyses class with necessary parameters for intra and inter analyses.\n\nArgs:\n    intra_id_list (list): List of IDs for intra analysis.\n    inter_id_list (list): List of IDs for inter analysis.\n    intra_metrics (object): Metrics object for intra analysis.\n    inter_metrics (object): Metrics object for inter analysis.\n    scale_format (str): The format of the scale used in the analysis.\n    categories (list): List of categories involved in the analysis.\n    weights (dict): Dictionary of weights for each category.\n    data (dict): Data used for the analysis, formatted according to the labels format in the FileValidation class.\n\nThis method initializes the class with the provided parameters, sets up the results structure, and triggers the intra and inter analyses if applicable.\n"""', 'create_intra_analyses': '"""\nConducts intra-analyses for each ID in the intra_id_list using the provided data and metrics.\n\nThis method iterates over each ID in the intra_id_list, retrieves the corresponding intra ratings,\nand computes the analysis using the Metrics class. The results are stored in the \'results\' dictionary\nunder the \'intra\' key, indexed by the ID. Debug prints provide detailed logs of the process and results.\n"""', 'create_inter_analyses': '"""\nConducts inter-rater analyses by aggregating ratings from multiple raters and computing the metrics.\n\nThis method aggregates the ratings from different raters specified in `inter_id_list` and computes the analysis\nusing the `Metrics` class. The results are stored in the `results[\'inter\']` dictionary. It also prints the aggregated\nratings if debugging is enabled.\n"""', 'find_intra_ratings': '"""\nExtracts intra-rater ratings for a given ID from the dataset.\n\nThis method filters and organizes the ratings data for a specific ID to facilitate intra-rater reliability analysis. It constructs a DataFrame where each row corresponds to a unique subject and the columns contain the ratings given by the same rater across different instances.\n\nParameters:\n    id (int): The identifier for the rater whose intra-ratings are to be extracted.\n\nReturns:\n    pandas.DataFrame: A DataFrame where the index represents the subjects and each entry in the DataFrame contains a list of ratings for that subject by the specified rater. Only subjects rated more than once by the same rater are included.\n"""', 'find_inter_ratings': '"""\nCompiles inter-rater ratings from multiple raters into a structured format.\n\nThis method aggregates ratings from different raters for the same subjects, organizing them into a DataFrame where each row corresponds to a subject and each column to a rater\'s rating for that subject. It ensures that each subject\'s ratings are aligned across the raters, facilitating subsequent inter-rater analysis.\n\nReturns:\n    pandas.DataFrame: A DataFrame where the index represents the subjects and each column contains the ratings given by different raters.\n"""'}}, {'global': {}}]}

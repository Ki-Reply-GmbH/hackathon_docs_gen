Python files found: 
['C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\app.py', 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\__init__.py', 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\core\\create_analyses.py', 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\core\\fileinteraction.py', 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\core\\metrics.py', 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\core\\__init__.py', 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\data\\__init__.py', 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\gui\\analyseframe.py', 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\gui\\containerframe.py', 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\gui\\fileframes.py', 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\gui\\helperframes.py', 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\gui\\mainframe.py', 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\gui\\rateframe.py', 'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\gui\\__init__.py']
Extracting methods ...
Extracted methods: 
['__init__', 'show_frame', 'load_icons', 'init_root_frame', 'init_frames', 'mainloop']
Documenting methods and functions ...

{'__init__': 20, 'show_frame': 53, 'load_icons': 57, 'init_root_frame': 75, 'init_frames': 79, 'mainloop': None}

{'C:\\Users\\t.kubera\\dev\\hackathon\\targets\\IIRA\\app.py': {'__init__': '"""Initialize the main application window for the IIRA system.\n\nThis method sets up the main window with a title, geometry, and minimum size. It initializes the database interaction, loads icons, sets the theme, and initializes all frames within the application. It also sets up the main frame to be displayed initially.\n"""', 'show_frame': '"""Raises the specified frame to the top of the stack in the application window.\n\nArgs:\n    frame_name (str): The name of the frame to be raised.\n\nRaises the frame associated with `frame_name` to the foreground, making it the currently visible frame.\n"""', 'load_icons': '"""Loads and initializes icon images from the filesystem into the application.\n\nThis method sets up various icons used throughout the application\'s GUI by loading them from specific paths and converting them into a format suitable for use in Tkinter. Each icon is associated with a specific functionality or visual representation in the GUI, such as application logo, file selection, home, profile, help, and others related to user interface themes and actions.\n"""', 'init_root_frame': '"""Initialize and configure the root frame for the application.\n\nThis method sets the provided frame to occupy the entire grid cell at the top level of the application window. It ensures that the frame expands to fill the entire allocated space.\n\nArgs:\n    frame (tk.Frame): The frame to be initialized and set as the root frame.\n"""', 'init_frames': '"""\nInitializes and configures all the main frames of the application.\n\nThis method sets up each frame (MainFrame, ScaleFrame, FileFrame, RateFrame, ResultsFrame, AnalyseFrame)\nby first clearing any existing widgets in them and then reinitializing and placing them in the root window.\nEach frame is stored in the `frames` dictionary of the App class, keyed by their respective names.\n"""', 'mainloop': '```python\ndef mainloop(self):\n    """\n    Start the main event loop of the application.\n\n    This method is called to run the application. It waits for events such as user interactions\n    and updates the GUI accordingly. The method blocks until the window is closed.\n    """\n```'}}


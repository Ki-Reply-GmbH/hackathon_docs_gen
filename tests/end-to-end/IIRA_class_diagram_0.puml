
@startuml
' This UML class diagram represents the structure of the software project, including core classes, their attributes, methods, and relationships.

skinparam class {
    BackgroundColor<<core>> LightBlue
}

' Define the App class
class App <<core>> {
    +__init__()
    +show_frame(frame_name: str)
    +load_icons()
    +init_root_frame(frame: tk.Frame)
    +init_frames()
    -filevalidation: None
    -dbinteraction: DBInteraction
    -scale_format: str
    -weights: str
    -categories: list
    -rater_ids: list
    -text: list
    -formatted_text: list
    -labels: dict
    -light_mode: bool
    -mode: None
    -frames: dict
    -style: ttk.Style
}

' Define the CreateAnalyses class
class CreateAnalyses <<core>> {
    +__init__(intra_id_list: list, inter_id_list: list, intra_metrics: list, inter_metrics: list, scale_format: str, categories: list, weights: list, data: dict)
    +create_intra_analyses()
    +create_inter_analyses()
    +find_intra_ratings(id: int): pd.DataFrame
    +find_inter_ratings(): pd.DataFrame
    -intra_id_list: list
    -inter_id_list: list
    -intra_metrics: list
    -inter_metrics: list
    -scale_format: str
    -categories: list
    -weights: list
    -data: dict
    -results: dict
}

' Define the FileValidation class
class FileValidation <<core>> {
    +__init__(file: str, scale_format: str)
    +check_format()
    +find_categories()
    +find_rater_ids()
    +find_text()
    +find_labels()
    +write_file(path: str, ratings: list)
    +usr_to_id(user: str): str
    +nlp(text: str): str
    -debug: bool
    -content: DataFrame
    -format: str
    -scale_format: str
    -categories: list
    -rater_ids: list
    -text: list
    -formatted_text: list
    -labels: dict
}

' Define the DBInteraction class
class DBInteraction <<core>> {
    +load_profiles()
    +create_profile(new_profile: str)
    +delete_profile()
    +change_profile(change_to: str)
    +write_to_db()
    -active_profile: str
    -profiles: list
    -db_file: str
}

' Define the Metrics class
class Metrics <<core>> {
    +__init__(scale_format: str, categories: list, ratings: pd.DataFrame, weights: list)
    +cohens_kappa(): float
    +fleiss_kappa(): float
    +gwets_ac(): float
    +krippendorfs_alpha(): float
    +g_index(): float
    +icc(): DataFrame
    +overall_agreement(): decimal.Decimal
    -debug: bool
    -scale_format: str
    -categories: list
    -ratings: pd.DataFrame
    -quantity_subjects: int
    -replications: int
    -weights: list
    -analysis: object
}

' Define the AnalyseFrame class
class AnalyseFrame <<core>> {
    +__init__(container: tk.Tk or tk.Frame)
    +analyse_start(container: tk.Tk)
    +populate_rater_container()
    +populate_metrics_container()
    +map_metric_to_var(mode: str, metric_name: str): tk.IntVar
    +toggle(mode: str)
    +help_cmd(event: tkinter.Event)
    +update_frame()
    -metrics: list
    -intra_kappa: tk.IntVar
    -intra_fleiss_kappa: tk.IntVar
    -intra_alpha_coefficient: tk.IntVar
    -intra_ac: tk.IntVar
    -intra_icc: tk.IntVar
    -intra_metrics: dict
    -inter_kappa: tk.IntVar
    -inter_fleiss_kappa: tk.IntVar
    -inter_alpha_coefficient: tk.IntVar
    -inter_ac: tk.IntVar
    -inter_icc: tk.IntVar
    -inter_metrics: dict
    -intra_ids: dict
    -inter_ids: dict
    -rater_container: ScrollFrame
    -toggle_ids: ttk.Button
    -metrics_container: ttk.Frame
    -toggle_metrics: ttk.Button
}

' Define the ResultsFrame class
class ResultsFrame <<core>> {
    +export_cmd()
    +help_cmd(event: tkinter.Event)
    +update_frame()
}

' Define the ContainerFrame class
class ContainerFrame <<core>> {
    +__init__(container: tk.Tk or tk.Frame)
    +init_menu_bar()
    +on_enter(frame: ttk.Frame, label: ttk.Label)
    +on_leave(frame: ttk.Frame, label: ttk.Label)
    +toggle_color_mode()
    +create_table(parent: tk.Widget, headings: list, content: list)
    +profile_cmd()
    +home_cmd()
    +help_cmd(event: tkinter.Event)
    +update_frame()
}

' Define the ScaleFrame class
class ScaleFrame <<core>> {
    +populate_frame(mode: str)
    +populate_weights()
    +populate_scaletype()
    +next_cmd()
    +help_cmd(event: tkinter.Event)
    +update_frame()
}

' Define the FileFrame class
class FileFrame <<core>> {
    +select_file(container: tk.Tk)
    +help_cmd(event: tkinter.Event)
    +update_frame()
}

' Define the ProfileFrame class
class ProfileFrame <<core>> {
    +create_new_profile()
    +change_profile(profile_selection: str)
    +delete_profile()
    +ok_cmd(event: tkinter.Event)
    +populate_profile_label()
    +populate_change_profile_menu()
}

' Define the ScrollFrame class
class ScrollFrame <<core>> {
    +onFrameConfigure(event: tkinter.Event)
    +onCanvasConfigure(event: tk.Event)
    +onMouseWheel(event: tkinter.Event)
    +onEnter(event: tk.Event)
    +onLeave(event: tk.Event)
}

' Define the MainFrame class
class MainFrame <<core>> {
    +start_mode(mode: str)
    +no_profile()
    +help_cmd(event: tkinter.Event)
}

' Define the RateFrame class
class RateFrame <<core>> {
    +__init__(container: tk.Tk)
    +populate_navigation()
    +randomize(mode: str)
    +doubleclick_treeview(event: tkinter.Event)
    +delete_questions()
    +populate_categories()
    +delete_categories()
    +populate_text()
    +add_newlines(text: str, n: int): str
    +count_upper_case(text: str, n: int): int
    +entry_input_cmd(event: tkinter.Event)
    +cat_hotkey_cmd(event: tkinter.Event)
    +next_cmd(event: tkinter.Event)
    +prev_cmd(event: tkinter.Event)
    +save_cmd()
    +delete_cmd()
    +label_text(event: tkinter.Event)
    +labeling_finished()
    +populate_percentage()
    +home_cmd()
    +help_cmd(event: tkinter.Event)
    +update_frame(mode: str)
}

' Define relationships
App --> DBInteraction
App --> FileValidation
App --> AnalyseFrame
App --> ResultsFrame
App --> ContainerFrame
App --> ScaleFrame
App --> FileFrame
App --> ProfileFrame
App --> ScrollFrame
App --> MainFrame
App --> RateFrame
CreateAnalyses --> Metrics
FileValidation --> DBInteraction
AnalyseFrame --> Metrics
ResultsFrame --> AnalyseFrame
ContainerFrame --> ProfileFrame
ScaleFrame --> FileFrame
FileFrame --> FileValidation
ProfileFrame --> DBInteraction
ScrollFrame --> ContainerFrame
MainFrame --> ScaleFrame
RateFrame --> ScrollFrame

@enduml
